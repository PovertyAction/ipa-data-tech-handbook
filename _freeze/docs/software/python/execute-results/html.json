{
  "hash": "4b63122f49e879066f27419fa2410bbd",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Python\nexecute:\n  eval: true\n---\n\n## What is Python?\n\nPython is a high-level, general-purpose programming language that is widely used in data\nscience, machine learning, and web development. It has a large standard library and a\nvibrant community that provides a wide range of libraries and tools for various\napplications. As such, Python provides a general-purpose ecosystem that can be used for\na wide range of applications.\n\n## How to install Python?\n\nThere are many ways to install Python. We recommend using Python in a virtual\nenvironment to avoid conflicts with other Python installations on your system.\n\nWe recommend using a [rye](https://rye.astral.sh/) or [pixi](https://pixi.sh/latest/).\nBoth of these tools provide a simple way to create and manage Python virtual\nenvironments.\n\nIn both cases, you can manage the python packages that are installed in the virtual\nenvironment using a `pyproject.toml` file. See the pyproject.toml example in this\nrepository for an example of how to manage Python packages. To add package dependencies\nto the virtual environment, using `rye`, you can run:\n\nWe'll use `rye` to demonstrate how to manage a Python virtual environment. Watch the\nfollowing video for a quick introduction to `rye`:\n\n\n{{< video https://youtu.be/q99TYA7LnuA >}}\n\n\n\nFirst, install `rye` using `winget` (Windows) or `brew` (MacOS/Linux):\n\n| Platform | Commands             |\n| -------- | -------------------- |\n| Windows  | `winget install rye` |\n| MacOS    | `brew install rye`   |\n| Linux    | `brew install rye`   |\n\nAdd libraries to the virtual environment using `rye add ...`:\n\n::: {#17aaecd9 .cell execution_count=1}\n``` {.python .cell-code}\n> rye add jupyterlab pandas matplotlib seaborn\n```\n:::\n\n\n## Coding Conventions\n\nSee the\n[GitLab Data Team's Python Guide](https://handbook.gitlab.com/handbook/business-technology/data-team/platform/python-guide/)\n\n## Learning Resources\n\nDownload data from the a URL:\n\n::: {#3cb20ef0 .cell execution_count=2}\n``` {.python .cell-code}\nfrom urllib.request import urlretrieve\n\n_ = urlretrieve(\n    \"https://raw.githubusercontent.com/mwaskom/seaborn-data/master/penguins.csv\",\n    \"../assets/data/penguins.csv\",\n)\n```\n:::\n\n\n::: {#c593971b .cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\n\ndf = pd.read_csv(\"../assets/data/penguins.csv\")\n```\n:::\n\n\n::: {#a5d84efe .cell execution_count=4}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt  # noqa: E402\nimport seaborn as sns  # noqa: E402\n\ng = sns.FacetGrid(df, hue=\"species\", height=3, aspect=1.5)\ng.map(plt.scatter, \"bill_length_mm\", \"bill_depth_mm\").add_legend()\n```\n\n::: {.cell-output .cell-output-display}\n![](python_files/figure-html/cell-5-output-1.png){width=527 height=278}\n:::\n:::\n\n\n## Learning Resources\n\n- [The Python Tutorial](https://docs.python.org/3.12/tutorial/index.html)\n- [Python Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/)\n- [Efficient Python for Data Scientists](https://khuyentran1401.github.io/Efficient_Python_tricks_and_tools_for_data_scientists/README.html)\n- [The Hitchhiker's Guide to Python](https://docs.python-guide.org/)\n\n",
    "supporting": [
      "python_files"
    ],
    "filters": [],
    "includes": {}
  }
}