---
title: Virtual Environments
# Editors are the "Maintainers" of the page
editors:
  - "[Niall Keleher](https://poverty-action.org/people/niall-keleher)"

# Authors are the "Contributors" of the page
# Add your name to the list if you have contributed to this page
# author:
#   - Niall Keleher
---

We encourage the use of virtual environments when working on shared projects. Virtual
environments allow you to create an isolated environment for your project, which can
help prevent conflicts between different projects that may require different versions of
the same package.

## Python Virtual Environments

We recommend using `pixi` to manage Python virtual environments as it provides an
overarching framework for managing Python installations and virtual environments. See
information on `pixi` in the [pixi documentation](https://pixi.sh/latest/).


## R Virtual Environments

R virtual environments can be created using the `renv` package. See
[documentation](https://rstudio.github.io/renv/articles/renv.html) for more information
about how to use `renv`.

## Docker

[Docker](https://docs.docker.com/get-started/overview/) is a tool that allows you to
create, deploy, and run applications using containers. In some instances, it may be more
appropriate to use Docker containers to manage your project environment, especially when
there is a project environment that needs to be deployed to cloud computing services.

## Learning Resources

- [A Complete Guide to Python Virtual Environments](https://www.dataquest.io/blog/a-complete-guide-to-python-virtual-environments/)
- [Real Python, Python Virtual Environments](https://realpython.com/python-virtual-environments-a-primer/)
- [Python Virtual Environments](https://docs.python.org/3/tutorial/venv.html)
- [R Virtual Environments](https://rstudio.github.io/renv/articles/renv.html)
